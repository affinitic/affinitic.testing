[buildout]
extensions = mr.developer
show-picked-versions = true
allow-picked-versions = false

extends = http://dist.plone.org/release/4.3/versions.cfg
          versions.cfg

sources-dir = devel
package-name = affinitic.testing

develop =
    .

auto-checkout =

allow-hosts = pypi.affinitic.be
              eggs.affinitic.be
              packages.affinitic.be

index = http://pypi.affinitic.be/affinitic/packages/+simple/

find-links =
    http://eggs.affinitic.be/

parts =
    py
    omelette
    test
    coverage-test
    coverage-report

eggs =
    affinitic.testing

versions = versions

[remotes]
affinitic = https://github.com/affinitic
affinitic_push = git@github.com:affinitic

[sources]
affinitic.testing = git ${remotes:affinitic}/affinitic.testing.git pushurl=${remotes:affinitic_push}/affinitic.testing.git
affinitic.db = git ${remotes:affinitic}/affinitic.db.git pushurl=${remotes:affinitic_push}/affinitic.db.git

[py]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = py
scripts = py

[omelette]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[test]
recipe = zc.recipe.testrunner
eggs = affinitic.testing [test]
defaults = ['-s', '${buildout:package-name}', '--auto-color', '--auto-progress']

[coverage-test]
recipe = zc.recipe.testrunner
eggs = affinitic.testing [test]
defaults = ['--coverage', '${buildout:directory}/coverage', '--auto-progress']

[coverage-report]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coverage
dependent-scripts = true
entry-points = coverage=z3c.coverage.coveragereport:main
arguments = ('coverage', 'coverage/report')
